# include "../ft_printf.h"
# include <stdio.h>
# include <unistd.h>
# include <string.h>
# include <assert.h>
# include <limits.h>

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

# define RESET	"\033[0m"
# define BOLD	"\033[1m"
# define RED		"\033[31m"
# define GREEN	"\033[32m"
# define YELLOW		"\033[33m"
# define BLUE	"\033[34m"
# define PURPLE		"\033[35m"
# define CYAN	"\033[36m"
# define WHITE	"\033[37m"
# define UNCOLOR	"\033[39m"

void	print_OK(int result)
{
	if (result != 0)
		printf(RED"KO!\n"UNCOLOR);
	else
		printf(GREEN"OK!\n"UNCOLOR);
}

void	print_result(int result, int mine)
{
	printf(CYAN"return expected [%d] : [%d]	"UNCOLOR, result, mine);
	print_OK(result - mine);
}

static void error_test(void)
{
	printf(PURPLE"no argument test - c\n\n"UNCOLOR);
	printf("hello {red}%%c{yellow} my name is {bold}%%c{reset} \n");
	ft_printf("hello {red}%c{yellow} my name is {bold}%c{reset} \n\n");

	printf(PURPLE"no argument test - str\n\n"UNCOLOR);
	printf("hello {red}%%s{yellow} my name is {bold}%%s{reset} \n");
	ft_printf("hello {red}%s{yellow} my name is {bold}%s{reset} \n\n", "mine");

	printf("hello {red}%%s{yellow} my name is {bold}%%s{reset} \n");
	ft_printf("hello {red}%s{yellow} my name is {bold}%s{reset} \n\n");

	printf(PURPLE"no argument test - p\n\n"UNCOLOR);
	printf("hello {red}%%p{yellow} my name is {bold}%%p{reset} \n");
	ft_printf("hello {red}%p{yellow} my name is {bold}%p{reset} \n\n");

	printf(PURPLE"no argument test - digits\n\n"UNCOLOR);
	printf("hello {red}%%d{yellow} my name is {bold}%%d{reset} \n");
	ft_printf("hello {red}%d{yellow} my name is {bold}%d{reset} \n\n");

	printf(PURPLE"no argument test - unsigned\n\n"UNCOLOR);
	printf("hello {red}%%u{yellow} my name is {bold}%%u{reset} \n");
	ft_printf("hello {red}%u{yellow} my name is {bold}%u{reset} \n\n");

	printf(PURPLE"no argument test - o\n\n"UNCOLOR);
	printf("hello {red}%%o{yellow} my name is {bold}%%o{reset} \n");
	ft_printf("hello {red}%o{yellow} my name is {bold}%o{reset} \n\n");

	printf(PURPLE"no argument test - f\n\n"UNCOLOR);
	printf("hello {red}%%f{yellow} my name is {bold}%%f{reset} \n");
	ft_printf("hello {red}%f{yellow} my name is {bold}%f{reset} \n\n");

	printf(PURPLE"no argument test - x\n\n"UNCOLOR);
	printf("hello {red}%%x{yellow} my name is {bold}%%x{reset} \n");
	ft_printf("hello {red}%x{yellow} my name is {bold}%x{reset} \n\n");

	printf(PURPLE"no argument test - X\n\n"UNCOLOR);
	printf("hello {red}%%X{yellow} my name is {bold}%%X{reset} \n");
	ft_printf("hello {red}%X{yellow} my name is {bold}%X{reset} \n\n");
	
}

int main(void)
{	
	printf(PURPLE"error handling test\n"UNCOLOR);
	error_test();
}
