# include "../ft_printf.h"
# include <stdio.h>
# include <unistd.h>
# include <string.h>
# include <assert.h>
# include <float.h>

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

# define RESET	"\033[0m"
# define BOLD	"\033[1m"
# define RED		"\033[31m"
# define GREEN	"\033[32m"
# define YELLOW		"\033[33m"
# define BLUE	"\033[34m"
# define PURPLE		"\033[35m"
# define CYAN	"\033[36m"
# define WHITE	"\033[37m"
# define UNCOLOR	"\033[39m"

void	print_OK(int result)
{
	if (result != 0)
		printf(RED"KO!\n"UNCOLOR);
	else
		printf(GREEN"OK!\n"UNCOLOR);
}

void	print_result(int result, int mine)
{
	printf(CYAN"return expected [%d] : [%d]	"UNCOLOR, result, mine);
	print_OK(result - mine);
}

static void	compare_results_f(float number)
{
	int	orig;
	int	mine;

	printf(YELLOW"\nInput: [%f]\n"UNCOLOR, number);
	orig = printf("expect: [%f]\n", number);
	mine = ft_printf("output: [%f]\n", number);
	print_result(orig, mine);
}

static void	compare_results_f_l(double number)
{
	int	orig;
	int	mine;

	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, number);
	orig = printf("expect: [%lf]\n", number);
	mine = ft_printf("output: [%lf]\n", number);
	print_result(orig, mine);
}

static void	compare_results_f_L(long double number)
{
	int	orig;
	int	mine;

	printf(YELLOW"\nInput: [%Lf]\n"UNCOLOR, number);
	orig = printf("expect: [%Lf]\n", number);
	mine = ft_printf("output: [%Lf]\n", number);
	print_result(orig, mine);
}

static void	f(void)
{
	int orig;
	int mine;

	// FLOAT
	float flo = FLT_MAX;
	//compare_results_f(flo);

	flo = 25.0250509999;
	compare_results_f(flo);

	//flo = FLT_MIN;
	//compare_results_f(flo);

	flo = -25.02505;
	compare_results_f(flo);

	/*flo = DBL_MAX;
	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, flo);
	orig = printf("expect: [%lf]\n", flo);
	mine = ft_printf("output: [%lf]\n", flo);
	print_result(orig, mine);

	flo = DBL_MIN;
	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, flo);
	orig = printf("expect: [%lf]\n", flo);
	mine = ft_printf("output: [%lf]\n", flo);
	print_result(orig, mine);*/

	flo = 0.559499999;
	compare_results_f(flo);

	flo = 0.5595;
	compare_results_f(flo);

	flo = 0.5596;
	compare_results_f(flo);

	flo = 0.9996;
	compare_results_f(flo);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR, 0.9996);
	orig = printf("expect: [%.2f]\n", 0.9996);
	mine = ft_printf("output: [%.2f]\n", 0.9996);
	print_result(orig, mine);

	printf(PURPLE"\nFLAG TEST\n"UNCOLOR);

	/* space */
	printf(YELLOW"\nInput: [%% f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [% f]\n", 900999.10256);
	mine = ft_printf("output: [% f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%% 16f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [% 16f]\n", 900999.10256);
	mine = ft_printf("output: [% 16f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%% 016f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [% 016f]\n", 900999.10256);
	mine = ft_printf("output: [% 016f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%% +16f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%+16f]\n", 900999.10256);
	mine = ft_printf("output: [% +16f]\n", 900999.10256);
	print_result(orig, mine);

	/* - */
	printf(YELLOW"\nInput: [%%-016f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%-16f]\n", 900999.10256);
	mine = ft_printf("output: [%-016f]\n", 900999.10256);
	print_result(orig, mine);

	/* + */
	printf(YELLOW"\nInput: [%%+f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%+f]\n", 900999.10256);
	mine = ft_printf("output: [%+f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-016f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%+-16f]\n", 900999.10256);
	mine = ft_printf("output: [%+-016f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-16f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%+-16f]\n", 900999.10256);
	mine = ft_printf("output: [%+-16f]\n", 900999.10256);
	print_result(orig, mine);

	/* WIDTH */
	printf(YELLOW"\nInput: [%%100f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%100f]\n", 900999.10256);
	mine = ft_printf("output: [%100f]\n", 900999.10256);
	print_result(orig, mine);

	/* PRECISION */
	printf(YELLOW"\nInput: [%%.3f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%.3f]\n", 900999.10256);
	mine = ft_printf("output: [%.3f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.16f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%.16f]\n", 900999.10256);
	mine = ft_printf("output: [%.16f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%10.3f] number: [%f]\n"UNCOLOR, 900999.10256);
	orig = printf("expect: [%10.3f]\n", 900999.10256);
	mine = ft_printf("output: [%10.3f]\n", 900999.10256);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%-10.5f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%-10.5f]\n", 900999.102569);
	mine = ft_printf("output: [%-10.5f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%-10.0f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%-10.0f]\n", 900999.102569);
	mine = ft_printf("output: [%-10.0f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-10.15f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-10.15f]\n", 900999.102569);
	mine = ft_printf("output: [%+-10.15f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-10f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-10f]\n", 900999.102569);
	mine = ft_printf("output: [%+-10f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-14f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-14f]\n", 900999.102569);
	mine = ft_printf("output: [%+-14f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-15f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-15f]\n", 900999.102569);
	mine = ft_printf("output: [%+-15f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-.15f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-.15f]\n", 900999.102569);
	mine = ft_printf("output: [%+-.15f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-.19f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-.19f]\n", 900999.102569);
	mine = ft_printf("output: [%+-.19f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%+-.18f] number: [%f]\n"UNCOLOR, 900999.102569);
	orig = printf("expect: [%+-.18f]\n", 900999.102569);
	mine = ft_printf("output: [%+-.18f]\n", 900999.102569);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.9f] number: [%f]\n"UNCOLOR,(float)2.3);
	orig = printf("expect: [%.9f]\n", (float)2.3);
	mine = ft_printf("output: [%.9f]\n", (float)2.3);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.9f] number: [%f]\n"UNCOLOR,2.3);
	orig = printf("expect: [%.9f]\n", 2.3);
	mine = ft_printf("output: [%.9f]\n", 2.3);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.35);
	orig = printf("expect: [%.2f]\n", 2.35);
	mine = ft_printf("output: [%.2f]\n", 2.35);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.35);
	orig = printf("expect: [%.1f]\n", 2.35);
	mine = ft_printf("output: [%.1f]\n", 2.35);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.45);
	orig = printf("expect: [%.2f]\n", 2.45);
	mine = ft_printf("output: [%.2f]\n", 2.45);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.45);
	orig = printf("expect: [%.1f]\n", 2.45);
	mine = ft_printf("output: [%.1f]\n", 2.45);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.15);
	orig = printf("expect: [%.2f]\n", 2.15);
	mine = ft_printf("output: [%.2f]\n", 2.15);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.15);
	orig = printf("expect: [%.1f]\n", 2.15);
	mine = ft_printf("output: [%.1f]\n", 2.15);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,-2.35);
	orig = printf("expect: [%.2f]\n", -2.35);
	mine = ft_printf("output: [%.2f]\n", -2.35);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,-2.35);
	orig = printf("expect: [%.1f]\n", -2.35);
	mine = ft_printf("output: [%.1f]\n", -2.35);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,-2.45);
	orig = printf("expect: [%.2f]\n", -2.45);
	mine = ft_printf("output: [%.2f]\n", -2.45);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,-2.45);
	orig = printf("expect: [%.1f]\n", -2.45);
	mine = ft_printf("output: [%.1f]\n", -2.45);
	print_result(orig, mine);

	printf(PURPLE"\ndecimal logic TEST\n"UNCOLOR);	

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.05);
	orig = printf("expect: [%.1f]\n", 2.05);
	mine = ft_printf("output: [%.1f]\n", 2.05);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.15);
	orig = printf("expect: [%.1f]\n", 2.15);
	mine = ft_printf("output: [%.1f]\n", 2.15);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.25);
	orig = printf("expect: [%.1f]\n", 2.25);
	mine = ft_printf("output: [%.1f]\n", 2.25);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.35);
	orig = printf("expect: [%.1f]\n", 2.35);
	mine = ft_printf("output: [%.1f]\n", 2.35);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.45);
	orig = printf("expect: [%.1f]\n", 2.45);
	mine = ft_printf("output: [%.1f]\n", 2.45);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.55);
	orig = printf("expect: [%.1f]\n", 2.55);
	mine = ft_printf("output: [%.1f]\n", 2.55);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.65);
	orig = printf("expect: [%.1f]\n", 2.65);
	mine = ft_printf("output: [%.1f]\n", 2.65);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.75);
	orig = printf("expect: [%.1f]\n", 2.75);
	mine = ft_printf("output: [%.1f]\n", 2.75);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.85);
	orig = printf("expect: [%.1f]\n", 2.85);
	mine = ft_printf("output: [%.1f]\n", 2.85);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.2f] number: [%f]\n"UNCOLOR,2.95);
	orig = printf("expect: [%.1f]\n", 2.95);
	mine = ft_printf("output: [%.1f]\n", 2.95);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,2.3405);
	orig = printf("expect: [%.3f]\n", 2.3405);
	mine = ft_printf("output: [%.3f]\n", 2.3405);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,2.3415);
	orig = printf("expect: [%.3f]\n", 2.3415);
	mine = ft_printf("output: [%.3f]\n", 2.3415);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,2.3425);
	orig = printf("expect: [%.3f]\n", 2.3425);
	mine = ft_printf("output: [%.3f]\n", 2.3425);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,2.3435);
	orig = printf("expect: [%.3f]\n", 2.3435);
	mine = ft_printf("output: [%.3f]\n", 2.3435);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,2.3445);
	orig = printf("expect: [%.3f]\n", 2.3445);
	mine = ft_printf("output: [%.3f]\n", 2.3445);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.4f] number: [%f]\n"UNCOLOR,1.02);
	orig = printf("expect: [%.3f]\n", 1.02);
	mine = ft_printf("output: [%.3f]\n", 1.02);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.1f] number: [%f]\n"UNCOLOR,0.05);
	orig = printf("expect: [%.1f]\n", 0.05);
	mine = ft_printf("output: [%.1f]\n", 0.05);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.1f] number: [%f]\n"UNCOLOR,0.04);
	orig = printf("expect: [%.1f]\n", 0.04);
	mine = ft_printf("output: [%.1f]\n", 0.04);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%f] number: [%f]\n"UNCOLOR,2.5555525);
	orig = printf("expect: [%f]\n", 2.5555525);
	mine = ft_printf("output: [%f]\n", 2.5555525);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%f] number: [%f]\n"UNCOLOR,0.0);
	orig = printf("expect: [%f]\n", 0.0);
	mine = ft_printf("output: [%f]\n", 0.0);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.1f] number: [%f]\n"UNCOLOR,0.0);
	orig = printf("expect: [%.1f]\n", 0.0);
	mine = ft_printf("output: [%.1f]\n", 0.0);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.1f] number: [%f]\n"UNCOLOR,0.8);
	orig = printf("expect: [%.1f]\n", 0.8);
	mine = ft_printf("output: [%.1f]\n", 0.8);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.3f] number: [%f]\n"UNCOLOR,0.0005);
	orig = printf("expect: [%.3f]\n", 0.0005);
	mine = ft_printf("output: [%.3f]\n", 0.0005);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.15f] number: [%f]\n"UNCOLOR,0.0005);
	orig = printf("expect: [%.15f]\n", 0.0005);
	mine = ft_printf("output: [%.15f]\n", 0.0005);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%f] number: [%f]\n"UNCOLOR,2.5555545);
	orig = printf("expect: [%f]\n", 2.5555545);
	mine = ft_printf("output: [%f]\n", 2.5555545);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.19f] number: [%f]\n"UNCOLOR,2.5555545);
	orig = printf("expect: [%.19f]\n", 2.5555545);
	mine = ft_printf("output: [%.19f]\n", 2.5555545);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.18f] number: [%f]\n"UNCOLOR,2.5555545);
	orig = printf("expect: [%.18f]\n", 2.5555545);
	mine = ft_printf("output: [%.18f]\n", 2.5555545);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%.17f] number: [%f]\n"UNCOLOR,2.5555545);
	orig = printf("expect: [%.17f]\n", 2.5555545);
	mine = ft_printf("output: [%.17f]\n", 2.5555545);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%f] number: [%f]\n"UNCOLOR,9.9999999);
	orig = printf("expect: [%f]\n", 9.9999999);
	mine = ft_printf("output: [%f]\n", 9.9999999);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%0.4f] number: [%f]\n"UNCOLOR,0.00035);
	orig = printf("expect: [%0.4f]\n", 0.00035);
	mine = ft_printf("output: [%0.4f]\n", 0.00035);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%0.4f] number: [%f]\n"UNCOLOR,0.00045);
	orig = printf("expect: [%0.4f]\n", 0.00045);
	mine = ft_printf("output: [%0.4f]\n", 0.00045);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%%0.4f] number: [%f]\n"UNCOLOR,0.00025);
	orig = printf("expect: [%0.4f]\n", 0.00025);
	mine = ft_printf("output: [%0.4f]\n", 0.00025);
	print_result(orig, mine);
	
	printf(PURPLE"\nl TEST\n"UNCOLOR);
	printf("l modifier: ignored does same as without it. takes in double\n");
	double doub = 25.20;
	compare_results_f_l(doub);

	//doub = DBL_MAX;
	//compare_results_f_l(doub);

	doub = DBL_MIN;
	compare_results_f_l(doub);

	printf(PURPLE"\nL TEST\n"UNCOLOR);
	printf("L modifier: converts long double into int or unsigned int and the L makes sure it changes back to orig\n");
	long double ldoub = 740992.051452552;
	compare_results_f_L(ldoub);

	//ldoub = LDBL_MAX;
	//compare_results_f_L(ldoub);

	ldoub = 1.0000000000000000000000000000000001926;
	compare_results_f_L(ldoub);

	ldoub = 0.9999999999999999999999999999999999037;
	compare_results_f_L(ldoub);

	printf(YELLOW"\nInput: [%.18Lf]\n"UNCOLOR, ldoub);
	orig = printf("expect: [%.18Lf]\n", ldoub);
	mine = ft_printf("output: [%.18Lf]\n", ldoub);
	print_result(orig, mine);
/*
	printf("%f: ", 1234567.89);
	orig = printf("%'.2f\n", 1234567.89);
	print_result(orig);
	printf("%f: ", 1234567.8908);
	orig = printf("%'.2f\n", 1234567.8908);
	print_result(orig);
	printf("%f: ", 1234567.8);
	orig = printf("%'.2f\n", 1234567.8);
	print_result(orig);*/
	//mine = ft_printf("%d", number);
	//printf("Expected: [%d]	output: [%s]\n", , "5");
	//print_OK(strcmp(printf("%d", number), "5"));

	printf(YELLOW"\nInput: [%f]\n"UNCOLOR, 1.42);
	orig = printf("expect: [%f]\n", 1.42);
	mine = ft_printf("output: [%f]\n", 1.42);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, 1.42);
	orig = printf("expect: [%lf]\n", 1.42);
	mine = ft_printf("output: [%lf]\n", 1.42);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%Lf]\n"UNCOLOR, 1.42l);
	orig = printf("expect: [%Lf]\n", 1.42l);
	mine = ft_printf("output: [%Lf]\n", 1.42l);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%f]\n"UNCOLOR, -1.42);
	orig = printf("expect: [%f]\n", -1.42);
	mine = ft_printf("output: [%f]\n", -1.42);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, -1.42);
	orig = printf("expect: [%lf]\n", -1.42);
	mine = ft_printf("output: [%lf]\n", -1.42);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%Lf]\n"UNCOLOR, -1.42l);
	orig = printf("expect: [%Lf]\n", -1.42l);
	mine = ft_printf("output: [%Lf]\n", -1.42l);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%f]\n"UNCOLOR, 1444565444646.6465424242242);
	orig = printf("expect: [%f]\n", 1444565444646.6465424242242);
	mine = ft_printf("output: [%f]\n", 1444565444646.6465424242242);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, 1444565444646.6465424242242);
	orig = printf("expect: [%lf]\n", 1444565444646.6465424242242);
	mine = ft_printf("output: [%lf]\n", 1444565444646.6465424242242);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%Lf]\n"UNCOLOR, 1444565444646.6465424242242l);
	orig = printf("expect: [%Lf]\n", 1444565444646.6465424242242l);
	mine = ft_printf("output: [%Lf]\n", 1444565444646.6465424242242l);
	print_result(orig, mine);
	
	printf(YELLOW"\nInput: [%f]\n"UNCOLOR, -1444565444646.6465424242242454654);
	orig = printf("expect: [%f]\n", -1444565444646.6465424242242454654);
	mine = ft_printf("output: [%f]\n", -1444565444646.6465424242242454654);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%lf]\n"UNCOLOR, -1444565444646.6465424242242454654);
	orig = printf("expect: [%lf]\n", -1444565444646.6465424242242454654);
	mine = ft_printf("output: [%lf]\n", -1444565444646.6465424242242454654);
	print_result(orig, mine);

	printf(YELLOW"\nInput: [%Lf]\n"UNCOLOR, -1444565444646.6465424242242454654l);
	orig = printf("expect: [%Lf]\n", -1444565444646.6465424242242454654l);
	mine = ft_printf("output: [%Lf]\n", -1444565444646.6465424242242454654l);
	print_result(orig, mine);
	
	
}

int main(void)
{
	printf(PURPLE"FLOAT TEST\n"UNCOLOR);
	f();
}
